version: '3.4'

x-variables: &x-variables
    APP_DEBUG: 1
    APP_ENV: dev
    APP_SECRET: c95ab68cbfba3232e79d72ebae567424
    POSTGRES_USER: medleybox
    POSTGRES_PASSWORD: medleybox
    MAILER_DSN: smtp://mailhog:1025

volumes:
    minio-data:
    postgres-data:
    redis-data:
    frontend-data:
    webapp-data:
    tmp-data:

networks:
    medley:
        external: true

services:
    nginx:
        image: ghcr.io/medleybox/nginx:master
        restart: always
        environment:
          APP_ENV: dev
          SERVICES: MAILHOG ENCORE FRONTEND
        build:
            context: ../nginx/
            dockerfile: ../nginx/Dockerfile
        depends_on:
            - "encore"
            - "webapp"
            - "mailhog"
            - "frontend"
        volumes:
            - ./public/build:/var/www/public/build
        networks:
            - medley
        ports:
            - "80:80"
            - "443:443"
    encore:
        image: ghcr.io/medleybox/encore:master
        environment:
            NODE_ENV: dev
        extra_hosts:
            - "medleybox.local:0.0.0.0"
        networks:
            - medley
        volumes:
            - ./assets:/app/assets
            - ./public/build:/app/public/build
        build:
            context: ./
            dockerfile: docker/encore/Dockerfile
    frontend:
        image: node:18-alpine3.17
        extra_hosts:
            - "medleybox.local:0.0.0.0"
        entrypoint: 'sh'
        working_dir: '/app'
        command:
            - '/app/bin/start-frontend-service'
        volumes:
            - ./bin:/app/bin
            - ../frontend:/app
            - frontend-data:/app/node_modules
        environment:
            NODE_ENV: dev
            PUBLIC_HOST: medleybox.local
        networks:
            - medley
    webapp:
        image: ghcr.io/medleybox/webapp:master
        build:
            context: ./
            dockerfile: docker/app/Dockerfile
        restart: always
        environment: *x-variables
        networks:
            - medley
        volumes:
            - ./bin/run-tests:/var/www/bin/run-tests:ro
            - ./bin/phpunit:/var/www/bin/phpunit:ro
            - ./config/packages:/var/www/config/packages
            - ./docker/app/dev.ini:/usr/local/etc/php/conf.d/webapp.ini
            - ./src:/var/www/src
            - ./templates:/var/www/templates
            - ./docker/app/dev.ini:/usr/local/etc/php/dev.ini
            - ./public/build:/var/www/public/build
            - ./.php_cs.php:/var/www/.php_cs.php:ro
            - ./phpstan.neon:/var/www/phpstan.neon:ro
            - ./phpunit.xml.dist:/var/www/phpunit.xml.dist:ro
            - webapp-data:/var/www/vendor
    redis:
        image: redis:alpine
        restart: always
        command: redis-server --save "" --appendonly "no"
        tmpfs:
            - /var/lib/redis
        cap_drop:
            - ALL
        cap_add:
            - SETGID
            - SETUID
            - DAC_OVERRIDE
        networks:
            - medley
        volumes:
            - redis-data:/data
    mailhog:
        image: mailhog/mailhog
        networks:
            - medley
    db:
        image: postgres:15-alpine3.17
        restart: always
        environment: *x-variables
        networks:
            - medley
        volumes:
            - postgres-data:/var/lib/postgresql/data
